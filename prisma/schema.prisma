generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model hotelcenter {
  id          String  @id @default(cuid())
  name        String  @unique
  reference   String
  address     String  @unique
  mapUrl      String  @db.VarChar(2000)
  description String  @db.VarChar(10000)
  urlSegment  String  @unique
  cellPhone   String?
  garage      Boolean @default(false)
  phone       String?
  rooms       room[]
  images      image[]
}

model room {
  id            String      @id @default(cuid())
  price         Int
  adults        Int
  bedType       String
  children      Int
  description   String      @db.VarChar(5000)
  roomNumber    Int
  target        String      @db.VarChar(5000)
  view          String
  hotelCenterId String
  floor         Int
  roomTypeId    String
  hotelcenter   hotelcenter @relation(fields: [hotelCenterId], references: [id])
  amenities     amenitie[]
  roomtype      roomtype    @relation(fields: [roomTypeId], references: [id])
  images        image[]
  bookings      booking[]
}

model amenitie {
  id    String @id @default(cuid())
  name  String @unique
  rooms room[]
}

model user {
  id            String    @id @default(cuid())
  username      String    @unique
  email         String    @unique
  password      String
  role          user_role
  emailVerified DateTime?
  image         image?
  bookings      booking[]
}

model roomtype {
  id    String @id @default(cuid())
  name  String @unique
  rooms room[]
}

model image {
  id            String       @id @default(cuid())
  url           String       @unique
  hotelCenterId String?
  roomId        String?
  public_id     String
  userId        String?      @unique
  hotelcenter   hotelcenter? @relation(fields: [hotelCenterId], references: [id])
  room          room?        @relation(fields: [roomId], references: [id])
  user          user?        @relation(fields: [userId], references: [id])
}

model service {
  id   String @id @default(cuid())
  name String @unique(map: "Service_name_key")
}

model booking {
  id           String              @id @default(cuid())
  checkIn      DateTime
  checkOut     DateTime
  userId       String
  creationMode bookingCreationMode @default(paid)
  roomId       String
  room         room                @relation(fields: [roomId], references: [id])
  user         user                @relation(fields: [userId], references: [id])
}

model amenitietoroom {
  A String
  B String

  @@unique([A, B], map: "_amenitieToroom_AB_unique")
  @@index([B], map: "_amenitieToroom_B_index")
  @@map("_amenitietoroom")
}

enum bookingCreationMode {
  manual
  paid
}

enum user_role {
  customer
  admin
  colaborator
}
